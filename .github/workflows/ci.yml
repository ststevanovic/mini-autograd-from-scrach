name: CI + AutoGrad-uate

on:
  pull_request:
    paths:
      - "notebooks/**"

permissions:
  contents: write
  pull-requests: write

jobs:
  test-and-autograduate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: pip install -r requirements.txt
      - run: pytest -q

      # Auto-merge if tests succeed
      - name: Enable auto-merge
        if: success()
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ github.event.pull_request.number }}
          merge-method: squash

      # Hall of 27 check
      - name: Check Hall of 27
        if: success()
        id: hall27
        run: |
          count=$(ls dist/*.whl 2>/dev/null | wc -l || true)
          echo "current=$count" >> $GITHUB_OUTPUT
          if [ "$count" -ge 27 ]; then
            echo "Hall of 27 is full. No more wheels will be stored."
            exit 0
          fi

      # Commit dist wheel + skullified notebook in a single commit
      - name: Commit Hall of 27 + Skullify
        if: success() && steps.hall27.outputs.current < 27
        env:
          STUDENT_ID: ${{ github.actor }}
          DATE: ${{ steps.date.outputs.now || '' }}
        run: |
          # Ensure we're on an up-to-date main before committing
          git fetch origin main
          git checkout main
          git pull --rebase origin main

          python - <<'PY'
          import os, glob, nbformat

          student = os.environ.get("STUDENT_ID", "unknown")
          date    = os.environ.get("DATE", "")

          ascii_banner = r"""
          #############################################################
          #                                                           #
          #    █████╗ ██╗   ██╗████████╗ ██████╗  ██████╗              #
          #   ██╔══██╗██║   ██║╚══██╔══╝██╔═══██╗██╔════╝              #
          #   ███████║██║   ██║   ██║   ██║   ██║██║  ███╗             #
          #   ██╔══██║██║   ██║   ██║   ██║   ██║██║   ██║             #
          #   ██║  ██║╚██████╔╝   ██║   ╚██████╔╝╚██████╔╝             #
          #   ╚═╝  ╚═╝ ╚═════╝    ╚═╝    ╚═════╝  ╚═════╝              #
          #                                                           #
          #           🎓 AUTO-GRAD-UATED! 🎓                          #
          #                                                           #
          #   Congrats {student} — your Tensor passed on {date}        #
          #                                                           #
          #############################################################
          """.format(student=student, date=date).strip("\n")

          md = ascii_banner + "\n\n" + \
              f"**🎓 AutoGrad-uated!**  \n" \
              f"Congrats **{student}** — your Tensor passed on **{date}**."

          for nb_path in glob.glob("notebooks/*.ipynb"):
              nb = nbformat.v4.new_notebook()
              nb.cells = [nbformat.v4.new_markdown_cell(md)]
              # minimal-but-valid metadata so Jupyter/GitHub render it cleanly
              nb.metadata = {
                  "kernelspec": {"display_name":"Python 3","language":"python","name":"python3"},
                  "language_info": {"name":"python","version":"3.11"}
              }
              nbformat.write(nb, nb_path)
          PY

              git config user.email "autograd-bot@users.noreply.github.com"
              git config user.name "autograd-bot"
              git add dist notebooks/
              git commit -m "🎓AutoGrad-uated: ${STUDENT_ID} (Hall of 27)" || echo "No changes to commit"
              git push origin main

